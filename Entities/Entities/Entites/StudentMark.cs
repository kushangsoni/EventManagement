//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entities.Entites
{
    using System;
    using System.Collections.Generic;
    using System.Configuration;
    using System.Data.SqlClient;
    using ViewModel;

    public partial class StudentMark
    {
        public int User_ID { get; set; }
        public double ArtificialIntellegence { get; set; }
        public double Python_Programming { get; set; }


        public static IList<StudentMark> GetStudentMarksDetails()
        {

            SqlConnection Connection = null;
            SqlCommand Command = null;
            SqlDataReader Data = null;

            try
            {
                Connection = new SqlConnection(ConfigurationManager.ConnectionStrings["StudentManagementConnection"].ConnectionString.ToString());
                Connection.Open();
                Command = new SqlCommand("Select * from StudentMarks", Connection);
                Data = Command.ExecuteReader();
                var stdentMarks = new List<StudentMark>();
                while (Data.Read())
                {
                    stdentMarks.Add(
                        new StudentMark()
                        {
                            User_ID = Data.GetInt16(0),
                            ArtificialIntellegence = Data.GetDouble(1),
                            Python_Programming = Data.GetDouble(2)
                        }
                    );
                }
                return stdentMarks;

            }
            catch (Exception e)
            {
                throw e;
            }
            finally
            {
                if (Data != null)
                {
                    try
                    {
                        Data.Close();
                    }
                    catch (SqlException e)
                    {
                    }

                }
                if (Command != null)
                {
                    try
                    {
                        Command.Dispose();
                    }
                    catch (SqlException e)
                    {
                    }


                }

                if (Connection != null)
                {
                    try
                    {
                        Connection.Close();
                    }
                    catch (SqlException e)
                    {
                    }


                }
            }


        }

        public static StudentMark GetStudentMarks(int studentId)
        {
            SqlConnection Connection = null;
            SqlCommand Command = null;
            SqlDataReader Data = null;

            try
            {
                Connection = new SqlConnection(ConfigurationManager.ConnectionStrings["StudentManagementConnection"].ConnectionString.ToString());
                Connection.Open();
                Command = new SqlCommand("Select * from StudentMarks  where Student_ID = @studentId", Connection);
                Command.Parameters.AddWithValue("@studentId", studentId);
                Command.Prepare();
                Data = Command.ExecuteReader();

                if (Data.Read())
                {
                    return new StudentMark()
                    {
                        User_ID = Data.GetInt16(0),
                        ArtificialIntellegence = Data.GetDouble(1),
                        Python_Programming = Data.GetDouble(2),
 
                    };

                }
                else
                {
                    return null;
                }


            }
            catch (SqlException e)
            {
                throw e;
            }
            finally
            {
                if (Data != null)
                {
                    try
                    {
                        Data.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
                if (Command != null)
                {
                    try
                    {
                        Command.Dispose();
                    }
                    catch (SqlException e)
                    {
                    }
                }

                if (Connection != null)
                {
                    try
                    {
                        Connection.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
            }

        }

        public static bool AddStudentMarks(StudentMarkDTO studentMarks)
        {
            SqlConnection Connection = null;
            SqlCommand Command = null;

            try
            {
                Connection = new SqlConnection(ConfigurationManager.ConnectionStrings["StudentManagementConnection"].ConnectionString.ToString());

                Connection.Open();
                Command.Connection = Connection;
                Command.CommandText = "insert into StudentMarks(User_ID,ArtificialIntellegence,Python_Programming) values(@userID,@artificialIntellegence,@pythonProgramming)";
                Command.Parameters.AddWithValue("@userID", studentMarks.User_ID);
                Command.Parameters.AddWithValue("@artificialIntellegence", studentMarks.ArtificialIntellegence);
                Command.Parameters.AddWithValue("@pythonProgramming", studentMarks.Python_Programming);
                Command.Prepare();

                Command.ExecuteNonQuery();

                return true;
            }
            catch (SqlException e)
            {
                return false;
            }
            finally
            {
                if (Command != null)
                {
                    try
                    {
                        Command.Dispose();
                    }
                    catch (SqlException e)
                    {
                    }
                }

                if (Connection != null)
                {
                    try
                    {
                        Connection.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
            }

        }

        public static bool UpdateStudentMarks(StudentMarkDTO studentMarks)
        {
            SqlConnection Connection = null;
            SqlCommand Command = null;

            try
            {
                Connection = new SqlConnection(ConfigurationManager.ConnectionStrings["StudentManagementConnection"].ConnectionString.ToString());

                Connection.Open();
                Command.Connection = Connection;
                string CommandString = @"UPDATE StudentMarks SET  ArtificialIntellegence = @artificialIntellegence ,
                                        Python_Programming = @pythonProgramming where User_ID = @userID;";
                Command.CommandText = CommandString;

                Command.Parameters.AddWithValue("@userID", studentMarks.User_ID);
                Command.Parameters.AddWithValue("@artificialIntellegence", studentMarks.ArtificialIntellegence);
                Command.Parameters.AddWithValue("@pythonProgramming", studentMarks.Python_Programming);
                Command.Prepare();

                Command.ExecuteNonQuery();


                return true;


            }
            catch (SqlException e)
            {
                return false;
            }
            finally
            {
                if (Command != null)
                {
                    try
                    {
                        Command.Dispose();
                    }
                    catch (SqlException e)
                    {
                    }
                }

                if (Connection != null)
                {
                    try
                    {
                        Connection.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
            }


        }

        public static bool DeleteStudentMarks(int userId)
        {

            SqlConnection Connection = null;
            SqlCommand Command = null;

            try
            {
                Connection = new SqlConnection(ConfigurationManager.ConnectionStrings["StudentManagementConnection"].ConnectionString.ToString());

                Connection.Open();
                Command.Connection = Connection;
                Command.CommandText = "delete from UserDetails where User_ID = @userID";
                Command.Parameters.AddWithValue("@userID", userId);
                Command.Prepare();

                Command.ExecuteNonQuery();

                return true;

            }
            catch (SqlException e)
            {
                return false;
            }
            finally
            {
                if (Command != null)
                {
                    try
                    {
                        Command.Dispose();
                    }
                    catch (SqlException e)
                    {
                    }
                }

                if (Connection != null)
                {
                    try
                    {
                        Connection.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
            }

        }

    }
}