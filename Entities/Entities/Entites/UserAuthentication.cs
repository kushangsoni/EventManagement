//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entities.Entites
{
    using System;
    using System.Collections.Generic;
    using System.Configuration;
    using System.Data.SqlClient;
    using ViewModel;
    public partial class UserAuthentication
    {
        public int User_ID { get; set; }
        public string UserName { get; set; }
        public string Password { get; set; }
        public string Type { get; set; }


        public virtual UserDetail UserDetail { get; set; }

        public static bool AddUserAuthentication(UserAuthenticationDTO user) {
            SqlConnection Connection = null;
            SqlCommand Command = null;

            try
            {
                Connection = new SqlConnection(ConfigurationManager.ConnectionStrings["StudentManagementConnection"].ConnectionString.ToString());

                Connection.Open();
                Command.Connection = Connection;
                Command.CommandText = "insert into UserAuthentication(User_ID,UserName,Password,Type) values(@userId,@userName,@password,@type)";
                Command.Parameters.AddWithValue("@userId", user.User_ID);
                Command.Parameters.AddWithValue("@userName", user.UserName);
                Command.Parameters.AddWithValue("@password", user.Password);
                Command.Parameters.AddWithValue("@type", user.Type);
                Command.Prepare();

                Command.ExecuteNonQuery();


                return true;


            }
            catch (SqlException e)
            {
                return false;
            }
            finally
            {
                if (Command != null)
                {
                    try
                    {
                        Command.Dispose();
                    }
                    catch (SqlException e)
                    {
                    }
                }

                if (Connection != null)
                {
                    try
                    {
                        Connection.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
            }
        }
        public static bool UppdateUserAuthentication(UserAuthenticationDTO user)
        {
            SqlConnection Connection = null;
            SqlCommand Command = null;

            try
            {
                Connection = new SqlConnection(ConfigurationManager.ConnectionStrings["StudentManagementConnection"].ConnectionString.ToString());

                Connection.Open();
                Command.Connection = Connection;
                Command.CommandText = "UPDATE UserAuthentication SET Password = @password where User_ID = @userID";
                Command.Parameters.AddWithValue("@userId", user.User_ID);

                Command.Parameters.AddWithValue("@password", user.Password);

                Command.Prepare();

                Command.ExecuteNonQuery();


                return true;
            }
            catch (SqlException e)
            {
                return false;
            }
            finally
            {
                if (Command != null)
                {
                    try
                    {
                        Command.Dispose();
                    }
                    catch (SqlException e)
                    {
                    }
                }

                if (Connection != null)
                {
                    try
                    {
                        Connection.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
            }
        }
        public static bool DeleteUserAuthentication(int userId)
        {
            SqlConnection Connection = null;
            SqlCommand Command = null;

            try
            {
                Connection = new SqlConnection(ConfigurationManager.ConnectionStrings["StudentManagementConnection"].ConnectionString.ToString());

                Connection.Open();
                Command.Connection = Connection;
                Command.CommandText = "delete from UserAuthentication where User_ID = @userID";
                Command.Parameters.AddWithValue("@userID", userId);
                Command.Prepare();

                Command.ExecuteNonQuery();

                return true;

            }
            catch (SqlException e)
            {
                return false;
            }
            finally
            {
                if (Command != null)
                {
                    try
                    {
                        Command.Dispose();
                    }
                    catch (SqlException e)
                    {
                    }
                }

                if (Connection != null)
                {
                    try
                    {
                        Connection.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
            }

        }

        public static UserAuthentication GetUserAuthentication(string userName, string password) {
            SqlConnection Connection = null;
            SqlCommand Command = null;
            SqlDataReader Data = null;

            try
            {
                Connection = new SqlConnection(ConfigurationManager.ConnectionStrings["StudentManagementConnection"].ConnectionString.ToString());
                Connection.Open();
                Command = new SqlCommand("Select TOP(1) * from UserAuthentication where UserName = @userName AND Password = @password", Connection);
                Command.Parameters.AddWithValue("userName", userName);
                Command.Parameters.AddWithValue("password", password);

                Command.Prepare();
                Data = Command.ExecuteReader();

                if (Data.Read())
                {
                    return new UserAuthentication()
                    {
                        User_ID = Data.GetInt16(0),
                        UserName = Data.GetString(1),
                        Password = Data.GetString(2),
                        Type = Data.GetString(3)
                    };

                }
                else
                {
                    return null;
                }


            }
            catch (SqlException e)
            {
                throw e;
            }
            finally
            {
                if (Data != null)
                {
                    try
                    {
                        Data.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
                if (Command != null)
                {
                    try
                    {
                        Command.Dispose();
                    }
                    catch (SqlException e)
                    {
                    }
                }

                if (Connection != null)
                {
                    try
                    {
                        Connection.Close();
                    }
                    catch (SqlException e)
                    {
                    }
                }
            }
        }
            
    }
}
